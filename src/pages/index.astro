---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import UptimeStatus from '../components/UptimeStatus.astro';
import uptimeData from '../lib/uptime-data.json';

// Define a type-safe status order mapping
const statusOrder: Record<string, number> = {
  up: 0,
  unknown: 1,
  down: 2
};

// Sort sites by status (up first, then unknown, then down)
const sortedSites = [...uptimeData.sites].sort((a, b) => {
  // Use type assertion or fallback for unknown statuses
  const aStatus = a.status?.toLowerCase() as keyof typeof statusOrder || 'unknown';
  const bStatus = b.status?.toLowerCase() as keyof typeof statusOrder || 'unknown';
  
  return (statusOrder[aStatus] || 1) - (statusOrder[bStatus] || 1);
});
---

<Layout title="Uptime Monitor">
  <main class="uptime-container">
    <h1>Website Status Monitor</h1>
    <p class="last-updated">Last updated: {new Date(uptimeData.lastUpdated).toLocaleString()}</p>
    
    <div class="status-grid">
      {sortedSites.map(site => (
        <UptimeStatus site={site} />
      ))}
    </div>
  </main>
</Layout>

<style>
  .uptime-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    color: #333;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 1rem;
    color: #2d3748;
  }
  
  .last-updated {
    text-align: center;
    color: #718096;
    margin-bottom: 2rem;
  }
  
  .status-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }
</style>